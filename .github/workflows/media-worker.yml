name: media-worker CD

on:
  push:
    branches: [main]
    paths:
      - "media-worker/**"
      - ".github/workflows/media-worker.yml"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: taaampp
  ECS_TASK_DEFINITION: ecs/media-worker-taskdef.json

  CONTAINER_NAME: media-worker-container

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./media-worker
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID and secrets in the Amazon ECS task definition``
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1.8.0
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}
        secrets: |
          PG_HOST=arn:aws:ssm:us-east-1:127214185642:parameter/taaampp/pg_host
          PG_USER=arn:aws:ssm:us-east-1:127214185642:parameter/taaampp/pg_user
          PG_PASSWORD=arn:aws:ssm:us-east-1:127214185642:parameter/taaampp/pg_password
          PG_DATABASE=arn:aws:ssm:us-east-1:127214185642:parameter/taaampp/pg_database
      
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
